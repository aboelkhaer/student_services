import 'dart:async';
import 'package:flutter/material.dart';
import 'package:student_services/utility/config.dart';
import 'package:student_services/utility/constans.dart';
import 'package:student_services/utility/shared_pref.dart';
import 'package:student_services/widgets/account_in_drawer.dart';
import 'package:student_services/widgets/my_text.dart';
import 'package:student_services/models/users.dart';

class MyDrawer extends StatefulWidget {
  @override
  _MyDrawerState createState() => _MyDrawerState();
}

class _MyDrawerState extends State<MyDrawer> {
  bool _isAdmin;
  Users users = Users();
  @override
  void initState() {
    super.initState();
    readFromSharedPref(firstName, lastName, email);
  }

  String firstName = '';
  String lastName = '';
  String email = '';

  @override
  Widget build(BuildContext context) {
    return Drawer(
      child: Column(
        children: <Widget>[
          Expanded(
            child: ListView(
              padding: EdgeInsets.all(0.0),
              children: <Widget>[
                FutureBuilder(
                    future: users.getUsereData(),
                    builder: (context, snapshot) {
                      if (snapshot.connectionState == ConnectionState.done) {
                        return accountInDrawer(
                          MyText(
                            // text:
                            //     '${users.firstName[0].toUpperCase()}${users.lastName[0].toUpperCase()}',
                            text:
                                '${firstName[0].toUpperCase()}${lastName[0].toUpperCase()}',
                            color: Colors.white,
                            size: 24,
                          ),
                          MyText(
                            // text: '${users.firstName}',
                            text: firstName,
                            size: 15,
                            color: Colors.white,
                            weight: FontWeight.w700,
                          ),
                          MyText(
                            // text: '${users.email}',
                            text: lastName,
                            color: Colors.white,
                            size: 14,
                          ),
                        );
                      } else {
                        return accountInDrawer(
                          SizedBox(
                            height: 30,
                            width: 30,
                            child: CircularProgressIndicator(),
                          ),
                          SizedBox(
                            height: 30,
                            width: 30,
                            child: CircularProgressIndicator(),
                          ),
                          SizedBox(
                            height: 30,
                            width: 30,
                            child: CircularProgressIndicator(),
                          ),
                        );
                      }
                    }),
                InkWell(
                  onTap: () {},
                  child: ListTile(
                    title: MyText(
                      text: 'Help and Feedback',
                      align: TextAlign.start,
                    ),
                    leading: Icon(
                      Icons.help,
                      size: 20,
                    ),
                  ),
                ),
                InkWell(
                  onTap: () {},
                  child: ListTile(
                    title: MyText(
                      text: 'Change Password',
                      align: TextAlign.start,
                    ),
                    leading: Icon(
                      Icons.lock,
                      size: 20,
                    ),
                  ),
                ),
                InkWell(
                  onTap: () {
                    Navigator.pushReplacementNamed(context, 'SignIn');
                    signOut();
                  },
                  child: ListTile(
                    title: MyText(
                      text: 'Sign Out',
                      align: TextAlign.start,
                    ),
                    leading: Icon(
                      Icons.exit_to_app,
                      size: 20,
                    ),
                  ),
                ),
              ],
            ),
          ),
          // This container holds the align

          FutureBuilder(
            future: users.getUsereData(),
            builder: (context, snapshot) {
              if (snapshot.connectionState == ConnectionState.done) {
                _isAdmin = users.admin ?? false;
                return adminFeature();
              } else {
                return SizedBox(
                  height: 30,
                  width: 30,
                  child: CircularProgressIndicator(),
                );
              }
            },
          ),
        ],
      ),
    );
  }

  Future signOut() async {
    try {
      return await StudentServicesApp.auth.signOut();
    } catch (e) {
      print(e.toString());
    }
  }

  // _getProfileData() async {
  //   var uid = await StudentServicesApp.auth.currentUser.uid;

  //   await StudentServicesApp.firebaseFirestore
  //       .collection('users')
  //       .doc(uid)
  //       .get()
  //       .then((result) {
  //     users.admin = result['admin'];
  //   });
  // }

  Widget adminFeature() {
    if (_isAdmin == true) {
      return Container(
        alignment: Alignment.center,
        // This align moves the children to the bottom
        child: Align(
          alignment: FractionalOffset.bottomCenter,
          // This container holds all the children that will be aligned
          // on the bottom and should not scroll with the above ListView
          child: Container(
            alignment: Alignment.center,
            child: Column(
              children: <Widget>[
                // Divider(),
                InkWell(
                  onTap: () {
                    Navigator.popAndPushNamed(context, 'DoctorPanal');
                  },
                  child: ListTile(
                    trailing: Icon(
                      Icons.arrow_forward_ios,
                      size: 20,
                    ),
                    title: Text(
                      'Doctor Panal',
                    ),
                  ),
                ),
              ],
            ),
          ),
        ),
      );
    } else {
      return Container(
        alignment: Alignment.center,
        child: MyText(
          text: 'You are\'t a doctor',
          color: mainColor,
        ),
      );
    }
  }
}
